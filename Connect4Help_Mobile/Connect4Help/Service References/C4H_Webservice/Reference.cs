//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Connect4Help.C4H_Webservice {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class ServiceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class Service : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private Connect4Help.C4H_Webservice.ServiceType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Connect4Help.C4H_Webservice.ServiceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Connect4Help.C4H_Webservice.CharityProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Connect4Help.C4H_Webservice.DonorProfile))]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string CityField;
        
        private string EmailField;
        
        private string FullNameField;
        
        private string PhoneField;
        
        private string PostalCodeField;
        
        private string ProvinceField;
        
        private Connect4Help.C4H_Webservice.UserRole RoleField;
        
        private int UserIDField;
        
        private string UserNameField;
        
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Connect4Help.C4H_Webservice.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharityProfile", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class CharityProfile : Connect4Help.C4H_Webservice.User {
        
        private Connect4Help.C4H_Webservice.CharityCategory CategoryField;
        
        private string CategoryTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityActivityCountry> CountriesField;
        
        private Connect4Help.C4H_Webservice.CharityDesignation DesignationField;
        
        private System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProgram> ProgramsField;
        
        private string RegNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Connect4Help.C4H_Webservice.CharityCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryType {
            get {
                return this.CategoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTypeField, value) != true)) {
                    this.CategoryTypeField = value;
                    this.RaisePropertyChanged("CategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityActivityCountry> Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Connect4Help.C4H_Webservice.CharityDesignation Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProgram> Programs {
            get {
                return this.ProgramsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramsField, value) != true)) {
                    this.ProgramsField = value;
                    this.RaisePropertyChanged("Programs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegNumber {
            get {
                return this.RegNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegNumberField, value) != true)) {
                    this.RegNumberField = value;
                    this.RaisePropertyChanged("RegNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DonorProfile", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class DonorProfile : Connect4Help.C4H_Webservice.User {
        
        private int BirthYearField;
        
        private Connect4Help.C4H_Webservice.UserGender GenderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BirthYear {
            get {
                return this.BirthYearField;
            }
            set {
                if ((this.BirthYearField.Equals(value) != true)) {
                    this.BirthYearField = value;
                    this.RaisePropertyChanged("BirthYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Connect4Help.C4H_Webservice.UserGender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Government = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Charity = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Donor = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharityCategory", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class CharityCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharityDesignation", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class CharityDesignation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharityActivityCountry", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class CharityActivityCountry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharityProgram", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public partial class CharityProgram : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGender", Namespace="http://schemas.datacontract.org/2004/07/C4H_Webservice.Structure")]
    public enum UserGender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="Service", ConfigurationName="C4H_Webservice.Service1")]
    public interface Service1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetServiceTypes", ReplyAction="http://tempuri.org/Service/GetServiceTypesResponse")]
        System.IAsyncResult BeginGetServiceTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> EndGetServiceTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetServices", ReplyAction="http://tempuri.org/Service/GetServicesResponse")]
        System.IAsyncResult BeginGetServices(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetServices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetServicesForSpecificType", ReplyAction="http://tempuri.org/Service/GetServicesForSpecificTypeResponse")]
        System.IAsyncResult BeginGetServicesForSpecificType(int ServiceTypeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetServicesForSpecificType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetUserWatchlist", ReplyAction="http://tempuri.org/Service/GetUserWatchlistResponse")]
        System.IAsyncResult BeginGetUserWatchlist(int UserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> EndGetUserWatchlist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/AddToUserWatchList", ReplyAction="http://tempuri.org/Service/AddToUserWatchListResponse")]
        System.IAsyncResult BeginAddToUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState);
        
        bool EndAddToUserWatchList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/RemoveFromUserWatchList", ReplyAction="http://tempuri.org/Service/RemoveFromUserWatchListResponse")]
        System.IAsyncResult BeginRemoveFromUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveFromUserWatchList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetUserServices", ReplyAction="http://tempuri.org/Service/GetUserServicesResponse")]
        System.IAsyncResult BeginGetUserServices(int UserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetUserServices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/AddToUserServicesList", ReplyAction="http://tempuri.org/Service/AddToUserServicesListResponse")]
        System.IAsyncResult BeginAddToUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState);
        
        bool EndAddToUserServicesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/RemoveromUserServicesList", ReplyAction="http://tempuri.org/Service/RemoveromUserServicesListResponse")]
        System.IAsyncResult BeginRemoveromUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveromUserServicesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetCharityDesignations", ReplyAction="http://tempuri.org/Service/GetCharityDesignationsResponse")]
        System.IAsyncResult BeginGetCharityDesignations(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> EndGetCharityDesignations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetCharityCategories", ReplyAction="http://tempuri.org/Service/GetCharityCategoriesResponse")]
        System.IAsyncResult BeginGetCharityCategories(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> EndGetCharityCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/CreateCharityProfile", ReplyAction="http://tempuri.org/Service/CreateCharityProfileResponse")]
        System.IAsyncResult BeginCreateCharityProfile(
                    string UserName, 
                    string Password, 
                    string FullName, 
                    string City, 
                    string Province, 
                    string PostalCode, 
                    string Address1, 
                    string Address2, 
                    string Phone, 
                    string Website, 
                    string Email, 
                    string RegNumber, 
                    int CatetgoryID, 
                    int DesignationID, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        Connect4Help.C4H_Webservice.CharityProfile EndCreateCharityProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetCharityProfileByUserID", ReplyAction="http://tempuri.org/Service/GetCharityProfileByUserIDResponse")]
        System.IAsyncResult BeginGetCharityProfileByUserID(int UserID, System.AsyncCallback callback, object asyncState);
        
        Connect4Help.C4H_Webservice.CharityProfile EndGetCharityProfileByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetCharityProfileByUsername", ReplyAction="http://tempuri.org/Service/GetCharityProfileByUsernameResponse")]
        System.IAsyncResult BeginGetCharityProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState);
        
        Connect4Help.C4H_Webservice.CharityProfile EndGetCharityProfileByUsername(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/CheckUserAuthentication", ReplyAction="http://tempuri.org/Service/CheckUserAuthenticationResponse")]
        System.IAsyncResult BeginCheckUserAuthentication(string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        Connect4Help.C4H_Webservice.DonorProfile EndCheckUserAuthentication(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/CreateDonorProfile", ReplyAction="http://tempuri.org/Service/CreateDonorProfileResponse")]
        System.IAsyncResult BeginCreateDonorProfile(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, Connect4Help.C4H_Webservice.UserGender Gender, int BirthYear, System.AsyncCallback callback, object asyncState);
        
        Connect4Help.C4H_Webservice.DonorProfile EndCreateDonorProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/GetDonorProfileByUsername", ReplyAction="http://tempuri.org/Service/GetDonorProfileByUsernameResponse")]
        System.IAsyncResult BeginGetDonorProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState);
        
        Connect4Help.C4H_Webservice.DonorProfile EndGetDonorProfileByUsername(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/SearchCharitiesByQueryPageByPage", ReplyAction="http://tempuri.org/Service/SearchCharitiesByQueryPageByPageResponse")]
        System.IAsyncResult BeginSearchCharitiesByQueryPageByPage(string Query, string Province, bool LooseSearch, int PageNumber, int RowsPerPageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> EndSearchCharitiesByQueryPageByPage(out int TotalRows, out System.Collections.Generic.Dictionary<string, int> Statistics, out System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int> DesignationStatistics, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Service/SearchCharitiesByQuery", ReplyAction="http://tempuri.org/Service/SearchCharitiesByQueryResponse")]
        System.IAsyncResult BeginSearchCharitiesByQuery(string Query, string Province, bool LooseSearch, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> EndSearchCharitiesByQuery(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1Channel : Connect4Help.C4H_Webservice.Service1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServicesForSpecificTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServicesForSpecificTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserWatchlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserWatchlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddToUserWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddToUserWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveFromUserWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveFromUserWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddToUserServicesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddToUserServicesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveromUserServicesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveromUserServicesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharityDesignationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharityDesignationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharityCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharityCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCharityProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCharityProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.CharityProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.CharityProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharityProfileByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharityProfileByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.CharityProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.CharityProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCharityProfileByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharityProfileByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.CharityProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.CharityProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.DonorProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.DonorProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDonorProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDonorProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.DonorProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.DonorProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDonorProfileByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDonorProfileByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Connect4Help.C4H_Webservice.DonorProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Connect4Help.C4H_Webservice.DonorProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCharitiesByQueryPageByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCharitiesByQueryPageByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int TotalRows {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.Dictionary<string, int> Statistics {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, int>)(this.results[1]));
            }
        }
        
        public System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int> DesignationStatistics {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int>)(this.results[2]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile>)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCharitiesByQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCharitiesByQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Connect4Help.C4H_Webservice.Service1>, Connect4Help.C4H_Webservice.Service1 {
        
        private BeginOperationDelegate onBeginGetServiceTypesDelegate;
        
        private EndOperationDelegate onEndGetServiceTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServicesDelegate;
        
        private EndOperationDelegate onEndGetServicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServicesForSpecificTypeDelegate;
        
        private EndOperationDelegate onEndGetServicesForSpecificTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServicesForSpecificTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserWatchlistDelegate;
        
        private EndOperationDelegate onEndGetUserWatchlistDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserWatchlistCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddToUserWatchListDelegate;
        
        private EndOperationDelegate onEndAddToUserWatchListDelegate;
        
        private System.Threading.SendOrPostCallback onAddToUserWatchListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFromUserWatchListDelegate;
        
        private EndOperationDelegate onEndRemoveFromUserWatchListDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFromUserWatchListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserServicesDelegate;
        
        private EndOperationDelegate onEndGetUserServicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddToUserServicesListDelegate;
        
        private EndOperationDelegate onEndAddToUserServicesListDelegate;
        
        private System.Threading.SendOrPostCallback onAddToUserServicesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveromUserServicesListDelegate;
        
        private EndOperationDelegate onEndRemoveromUserServicesListDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveromUserServicesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharityDesignationsDelegate;
        
        private EndOperationDelegate onEndGetCharityDesignationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharityDesignationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharityCategoriesDelegate;
        
        private EndOperationDelegate onEndGetCharityCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharityCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCharityProfileDelegate;
        
        private EndOperationDelegate onEndCreateCharityProfileDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCharityProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharityProfileByUserIDDelegate;
        
        private EndOperationDelegate onEndGetCharityProfileByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharityProfileByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharityProfileByUsernameDelegate;
        
        private EndOperationDelegate onEndGetCharityProfileByUsernameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharityProfileByUsernameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserAuthenticationDelegate;
        
        private EndOperationDelegate onEndCheckUserAuthenticationDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserAuthenticationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDonorProfileDelegate;
        
        private EndOperationDelegate onEndCreateDonorProfileDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDonorProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDonorProfileByUsernameDelegate;
        
        private EndOperationDelegate onEndGetDonorProfileByUsernameDelegate;
        
        private System.Threading.SendOrPostCallback onGetDonorProfileByUsernameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchCharitiesByQueryPageByPageDelegate;
        
        private EndOperationDelegate onEndSearchCharitiesByQueryPageByPageDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCharitiesByQueryPageByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchCharitiesByQueryDelegate;
        
        private EndOperationDelegate onEndSearchCharitiesByQueryDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCharitiesByQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetServiceTypesCompletedEventArgs> GetServiceTypesCompleted;
        
        public event System.EventHandler<GetServicesCompletedEventArgs> GetServicesCompleted;
        
        public event System.EventHandler<GetServicesForSpecificTypeCompletedEventArgs> GetServicesForSpecificTypeCompleted;
        
        public event System.EventHandler<GetUserWatchlistCompletedEventArgs> GetUserWatchlistCompleted;
        
        public event System.EventHandler<AddToUserWatchListCompletedEventArgs> AddToUserWatchListCompleted;
        
        public event System.EventHandler<RemoveFromUserWatchListCompletedEventArgs> RemoveFromUserWatchListCompleted;
        
        public event System.EventHandler<GetUserServicesCompletedEventArgs> GetUserServicesCompleted;
        
        public event System.EventHandler<AddToUserServicesListCompletedEventArgs> AddToUserServicesListCompleted;
        
        public event System.EventHandler<RemoveromUserServicesListCompletedEventArgs> RemoveromUserServicesListCompleted;
        
        public event System.EventHandler<GetCharityDesignationsCompletedEventArgs> GetCharityDesignationsCompleted;
        
        public event System.EventHandler<GetCharityCategoriesCompletedEventArgs> GetCharityCategoriesCompleted;
        
        public event System.EventHandler<CreateCharityProfileCompletedEventArgs> CreateCharityProfileCompleted;
        
        public event System.EventHandler<GetCharityProfileByUserIDCompletedEventArgs> GetCharityProfileByUserIDCompleted;
        
        public event System.EventHandler<GetCharityProfileByUsernameCompletedEventArgs> GetCharityProfileByUsernameCompleted;
        
        public event System.EventHandler<CheckUserAuthenticationCompletedEventArgs> CheckUserAuthenticationCompleted;
        
        public event System.EventHandler<CreateDonorProfileCompletedEventArgs> CreateDonorProfileCompleted;
        
        public event System.EventHandler<GetDonorProfileByUsernameCompletedEventArgs> GetDonorProfileByUsernameCompleted;
        
        public event System.EventHandler<SearchCharitiesByQueryPageByPageCompletedEventArgs> SearchCharitiesByQueryPageByPageCompleted;
        
        public event System.EventHandler<SearchCharitiesByQueryCompletedEventArgs> SearchCharitiesByQueryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetServiceTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> Connect4Help.C4H_Webservice.Service1.EndGetServiceTypes(System.IAsyncResult result) {
            return base.Channel.EndGetServiceTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetServiceTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetServiceTypes(callback, asyncState);
        }
        
        private object[] OnEndGetServiceTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetServiceTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceTypesCompleted(object state) {
            if ((this.GetServiceTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceTypesCompleted(this, new GetServiceTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceTypesAsync() {
            this.GetServiceTypesAsync(null);
        }
        
        public void GetServiceTypesAsync(object userState) {
            if ((this.onBeginGetServiceTypesDelegate == null)) {
                this.onBeginGetServiceTypesDelegate = new BeginOperationDelegate(this.OnBeginGetServiceTypes);
            }
            if ((this.onEndGetServiceTypesDelegate == null)) {
                this.onEndGetServiceTypesDelegate = new EndOperationDelegate(this.OnEndGetServiceTypes);
            }
            if ((this.onGetServiceTypesCompletedDelegate == null)) {
                this.onGetServiceTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceTypesDelegate, null, this.onEndGetServiceTypesDelegate, this.onGetServiceTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetServices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Connect4Help.C4H_Webservice.Service1.EndGetServices(System.IAsyncResult result) {
            return base.Channel.EndGetServices(result);
        }
        
        private System.IAsyncResult OnBeginGetServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetServices(callback, asyncState);
        }
        
        private object[] OnEndGetServices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServicesCompleted(object state) {
            if ((this.GetServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServicesAsync() {
            this.GetServicesAsync(null);
        }
        
        public void GetServicesAsync(object userState) {
            if ((this.onBeginGetServicesDelegate == null)) {
                this.onBeginGetServicesDelegate = new BeginOperationDelegate(this.OnBeginGetServices);
            }
            if ((this.onEndGetServicesDelegate == null)) {
                this.onEndGetServicesDelegate = new EndOperationDelegate(this.OnEndGetServices);
            }
            if ((this.onGetServicesCompletedDelegate == null)) {
                this.onGetServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetServicesDelegate, null, this.onEndGetServicesDelegate, this.onGetServicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetServicesForSpecificType(int ServiceTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServicesForSpecificType(ServiceTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Connect4Help.C4H_Webservice.Service1.EndGetServicesForSpecificType(System.IAsyncResult result) {
            return base.Channel.EndGetServicesForSpecificType(result);
        }
        
        private System.IAsyncResult OnBeginGetServicesForSpecificType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ServiceTypeID = ((int)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetServicesForSpecificType(ServiceTypeID, callback, asyncState);
        }
        
        private object[] OnEndGetServicesForSpecificType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetServicesForSpecificType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServicesForSpecificTypeCompleted(object state) {
            if ((this.GetServicesForSpecificTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServicesForSpecificTypeCompleted(this, new GetServicesForSpecificTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServicesForSpecificTypeAsync(int ServiceTypeID) {
            this.GetServicesForSpecificTypeAsync(ServiceTypeID, null);
        }
        
        public void GetServicesForSpecificTypeAsync(int ServiceTypeID, object userState) {
            if ((this.onBeginGetServicesForSpecificTypeDelegate == null)) {
                this.onBeginGetServicesForSpecificTypeDelegate = new BeginOperationDelegate(this.OnBeginGetServicesForSpecificType);
            }
            if ((this.onEndGetServicesForSpecificTypeDelegate == null)) {
                this.onEndGetServicesForSpecificTypeDelegate = new EndOperationDelegate(this.OnEndGetServicesForSpecificType);
            }
            if ((this.onGetServicesForSpecificTypeCompletedDelegate == null)) {
                this.onGetServicesForSpecificTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServicesForSpecificTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServicesForSpecificTypeDelegate, new object[] {
                        ServiceTypeID}, this.onEndGetServicesForSpecificTypeDelegate, this.onGetServicesForSpecificTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetUserWatchlist(int UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserWatchlist(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> Connect4Help.C4H_Webservice.Service1.EndGetUserWatchlist(System.IAsyncResult result) {
            return base.Channel.EndGetUserWatchlist(result);
        }
        
        private System.IAsyncResult OnBeginGetUserWatchlist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetUserWatchlist(UserID, callback, asyncState);
        }
        
        private object[] OnEndGetUserWatchlist(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetUserWatchlist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserWatchlistCompleted(object state) {
            if ((this.GetUserWatchlistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserWatchlistCompleted(this, new GetUserWatchlistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserWatchlistAsync(int UserID) {
            this.GetUserWatchlistAsync(UserID, null);
        }
        
        public void GetUserWatchlistAsync(int UserID, object userState) {
            if ((this.onBeginGetUserWatchlistDelegate == null)) {
                this.onBeginGetUserWatchlistDelegate = new BeginOperationDelegate(this.OnBeginGetUserWatchlist);
            }
            if ((this.onEndGetUserWatchlistDelegate == null)) {
                this.onEndGetUserWatchlistDelegate = new EndOperationDelegate(this.OnEndGetUserWatchlist);
            }
            if ((this.onGetUserWatchlistCompletedDelegate == null)) {
                this.onGetUserWatchlistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserWatchlistCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserWatchlistDelegate, new object[] {
                        UserID}, this.onEndGetUserWatchlistDelegate, this.onGetUserWatchlistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginAddToUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddToUserWatchList(UserID, FollowedUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Connect4Help.C4H_Webservice.Service1.EndAddToUserWatchList(System.IAsyncResult result) {
            return base.Channel.EndAddToUserWatchList(result);
        }
        
        private System.IAsyncResult OnBeginAddToUserWatchList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            int FollowedUserID = ((int)(inValues[1]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginAddToUserWatchList(UserID, FollowedUserID, callback, asyncState);
        }
        
        private object[] OnEndAddToUserWatchList(System.IAsyncResult result) {
            bool retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndAddToUserWatchList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddToUserWatchListCompleted(object state) {
            if ((this.AddToUserWatchListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddToUserWatchListCompleted(this, new AddToUserWatchListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddToUserWatchListAsync(int UserID, int FollowedUserID) {
            this.AddToUserWatchListAsync(UserID, FollowedUserID, null);
        }
        
        public void AddToUserWatchListAsync(int UserID, int FollowedUserID, object userState) {
            if ((this.onBeginAddToUserWatchListDelegate == null)) {
                this.onBeginAddToUserWatchListDelegate = new BeginOperationDelegate(this.OnBeginAddToUserWatchList);
            }
            if ((this.onEndAddToUserWatchListDelegate == null)) {
                this.onEndAddToUserWatchListDelegate = new EndOperationDelegate(this.OnEndAddToUserWatchList);
            }
            if ((this.onAddToUserWatchListCompletedDelegate == null)) {
                this.onAddToUserWatchListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddToUserWatchListCompleted);
            }
            base.InvokeAsync(this.onBeginAddToUserWatchListDelegate, new object[] {
                        UserID,
                        FollowedUserID}, this.onEndAddToUserWatchListDelegate, this.onAddToUserWatchListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginRemoveFromUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFromUserWatchList(UserID, FollowedUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Connect4Help.C4H_Webservice.Service1.EndRemoveFromUserWatchList(System.IAsyncResult result) {
            return base.Channel.EndRemoveFromUserWatchList(result);
        }
        
        private System.IAsyncResult OnBeginRemoveFromUserWatchList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            int FollowedUserID = ((int)(inValues[1]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginRemoveFromUserWatchList(UserID, FollowedUserID, callback, asyncState);
        }
        
        private object[] OnEndRemoveFromUserWatchList(System.IAsyncResult result) {
            bool retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndRemoveFromUserWatchList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveFromUserWatchListCompleted(object state) {
            if ((this.RemoveFromUserWatchListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFromUserWatchListCompleted(this, new RemoveFromUserWatchListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFromUserWatchListAsync(int UserID, int FollowedUserID) {
            this.RemoveFromUserWatchListAsync(UserID, FollowedUserID, null);
        }
        
        public void RemoveFromUserWatchListAsync(int UserID, int FollowedUserID, object userState) {
            if ((this.onBeginRemoveFromUserWatchListDelegate == null)) {
                this.onBeginRemoveFromUserWatchListDelegate = new BeginOperationDelegate(this.OnBeginRemoveFromUserWatchList);
            }
            if ((this.onEndRemoveFromUserWatchListDelegate == null)) {
                this.onEndRemoveFromUserWatchListDelegate = new EndOperationDelegate(this.OnEndRemoveFromUserWatchList);
            }
            if ((this.onRemoveFromUserWatchListCompletedDelegate == null)) {
                this.onRemoveFromUserWatchListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFromUserWatchListCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFromUserWatchListDelegate, new object[] {
                        UserID,
                        FollowedUserID}, this.onEndRemoveFromUserWatchListDelegate, this.onRemoveFromUserWatchListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetUserServices(int UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserServices(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> Connect4Help.C4H_Webservice.Service1.EndGetUserServices(System.IAsyncResult result) {
            return base.Channel.EndGetUserServices(result);
        }
        
        private System.IAsyncResult OnBeginGetUserServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetUserServices(UserID, callback, asyncState);
        }
        
        private object[] OnEndGetUserServices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetUserServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserServicesCompleted(object state) {
            if ((this.GetUserServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserServicesCompleted(this, new GetUserServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserServicesAsync(int UserID) {
            this.GetUserServicesAsync(UserID, null);
        }
        
        public void GetUserServicesAsync(int UserID, object userState) {
            if ((this.onBeginGetUserServicesDelegate == null)) {
                this.onBeginGetUserServicesDelegate = new BeginOperationDelegate(this.OnBeginGetUserServices);
            }
            if ((this.onEndGetUserServicesDelegate == null)) {
                this.onEndGetUserServicesDelegate = new EndOperationDelegate(this.OnEndGetUserServices);
            }
            if ((this.onGetUserServicesCompletedDelegate == null)) {
                this.onGetUserServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserServicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserServicesDelegate, new object[] {
                        UserID}, this.onEndGetUserServicesDelegate, this.onGetUserServicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginAddToUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddToUserServicesList(UserID, ServiceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Connect4Help.C4H_Webservice.Service1.EndAddToUserServicesList(System.IAsyncResult result) {
            return base.Channel.EndAddToUserServicesList(result);
        }
        
        private System.IAsyncResult OnBeginAddToUserServicesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            int ServiceID = ((int)(inValues[1]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginAddToUserServicesList(UserID, ServiceID, callback, asyncState);
        }
        
        private object[] OnEndAddToUserServicesList(System.IAsyncResult result) {
            bool retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndAddToUserServicesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddToUserServicesListCompleted(object state) {
            if ((this.AddToUserServicesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddToUserServicesListCompleted(this, new AddToUserServicesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddToUserServicesListAsync(int UserID, int ServiceID) {
            this.AddToUserServicesListAsync(UserID, ServiceID, null);
        }
        
        public void AddToUserServicesListAsync(int UserID, int ServiceID, object userState) {
            if ((this.onBeginAddToUserServicesListDelegate == null)) {
                this.onBeginAddToUserServicesListDelegate = new BeginOperationDelegate(this.OnBeginAddToUserServicesList);
            }
            if ((this.onEndAddToUserServicesListDelegate == null)) {
                this.onEndAddToUserServicesListDelegate = new EndOperationDelegate(this.OnEndAddToUserServicesList);
            }
            if ((this.onAddToUserServicesListCompletedDelegate == null)) {
                this.onAddToUserServicesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddToUserServicesListCompleted);
            }
            base.InvokeAsync(this.onBeginAddToUserServicesListDelegate, new object[] {
                        UserID,
                        ServiceID}, this.onEndAddToUserServicesListDelegate, this.onAddToUserServicesListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginRemoveromUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveromUserServicesList(UserID, ServiceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Connect4Help.C4H_Webservice.Service1.EndRemoveromUserServicesList(System.IAsyncResult result) {
            return base.Channel.EndRemoveromUserServicesList(result);
        }
        
        private System.IAsyncResult OnBeginRemoveromUserServicesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            int ServiceID = ((int)(inValues[1]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginRemoveromUserServicesList(UserID, ServiceID, callback, asyncState);
        }
        
        private object[] OnEndRemoveromUserServicesList(System.IAsyncResult result) {
            bool retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndRemoveromUserServicesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveromUserServicesListCompleted(object state) {
            if ((this.RemoveromUserServicesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveromUserServicesListCompleted(this, new RemoveromUserServicesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveromUserServicesListAsync(int UserID, int ServiceID) {
            this.RemoveromUserServicesListAsync(UserID, ServiceID, null);
        }
        
        public void RemoveromUserServicesListAsync(int UserID, int ServiceID, object userState) {
            if ((this.onBeginRemoveromUserServicesListDelegate == null)) {
                this.onBeginRemoveromUserServicesListDelegate = new BeginOperationDelegate(this.OnBeginRemoveromUserServicesList);
            }
            if ((this.onEndRemoveromUserServicesListDelegate == null)) {
                this.onEndRemoveromUserServicesListDelegate = new EndOperationDelegate(this.OnEndRemoveromUserServicesList);
            }
            if ((this.onRemoveromUserServicesListCompletedDelegate == null)) {
                this.onRemoveromUserServicesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveromUserServicesListCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveromUserServicesListDelegate, new object[] {
                        UserID,
                        ServiceID}, this.onEndRemoveromUserServicesListDelegate, this.onRemoveromUserServicesListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetCharityDesignations(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharityDesignations(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> Connect4Help.C4H_Webservice.Service1.EndGetCharityDesignations(System.IAsyncResult result) {
            return base.Channel.EndGetCharityDesignations(result);
        }
        
        private System.IAsyncResult OnBeginGetCharityDesignations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetCharityDesignations(callback, asyncState);
        }
        
        private object[] OnEndGetCharityDesignations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetCharityDesignations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharityDesignationsCompleted(object state) {
            if ((this.GetCharityDesignationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharityDesignationsCompleted(this, new GetCharityDesignationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharityDesignationsAsync() {
            this.GetCharityDesignationsAsync(null);
        }
        
        public void GetCharityDesignationsAsync(object userState) {
            if ((this.onBeginGetCharityDesignationsDelegate == null)) {
                this.onBeginGetCharityDesignationsDelegate = new BeginOperationDelegate(this.OnBeginGetCharityDesignations);
            }
            if ((this.onEndGetCharityDesignationsDelegate == null)) {
                this.onEndGetCharityDesignationsDelegate = new EndOperationDelegate(this.OnEndGetCharityDesignations);
            }
            if ((this.onGetCharityDesignationsCompletedDelegate == null)) {
                this.onGetCharityDesignationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharityDesignationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharityDesignationsDelegate, null, this.onEndGetCharityDesignationsDelegate, this.onGetCharityDesignationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetCharityCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharityCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> Connect4Help.C4H_Webservice.Service1.EndGetCharityCategories(System.IAsyncResult result) {
            return base.Channel.EndGetCharityCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetCharityCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetCharityCategories(callback, asyncState);
        }
        
        private object[] OnEndGetCharityCategories(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetCharityCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharityCategoriesCompleted(object state) {
            if ((this.GetCharityCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharityCategoriesCompleted(this, new GetCharityCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharityCategoriesAsync() {
            this.GetCharityCategoriesAsync(null);
        }
        
        public void GetCharityCategoriesAsync(object userState) {
            if ((this.onBeginGetCharityCategoriesDelegate == null)) {
                this.onBeginGetCharityCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetCharityCategories);
            }
            if ((this.onEndGetCharityCategoriesDelegate == null)) {
                this.onEndGetCharityCategoriesDelegate = new EndOperationDelegate(this.OnEndGetCharityCategories);
            }
            if ((this.onGetCharityCategoriesCompletedDelegate == null)) {
                this.onGetCharityCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharityCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharityCategoriesDelegate, null, this.onEndGetCharityCategoriesDelegate, this.onGetCharityCategoriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginCreateCharityProfile(
                    string UserName, 
                    string Password, 
                    string FullName, 
                    string City, 
                    string Province, 
                    string PostalCode, 
                    string Address1, 
                    string Address2, 
                    string Phone, 
                    string Website, 
                    string Email, 
                    string RegNumber, 
                    int CatetgoryID, 
                    int DesignationID, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginCreateCharityProfile(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, RegNumber, CatetgoryID, DesignationID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.CharityProfile Connect4Help.C4H_Webservice.Service1.EndCreateCharityProfile(System.IAsyncResult result) {
            return base.Channel.EndCreateCharityProfile(result);
        }
        
        private System.IAsyncResult OnBeginCreateCharityProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            string FullName = ((string)(inValues[2]));
            string City = ((string)(inValues[3]));
            string Province = ((string)(inValues[4]));
            string PostalCode = ((string)(inValues[5]));
            string Address1 = ((string)(inValues[6]));
            string Address2 = ((string)(inValues[7]));
            string Phone = ((string)(inValues[8]));
            string Website = ((string)(inValues[9]));
            string Email = ((string)(inValues[10]));
            string RegNumber = ((string)(inValues[11]));
            int CatetgoryID = ((int)(inValues[12]));
            int DesignationID = ((int)(inValues[13]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginCreateCharityProfile(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, RegNumber, CatetgoryID, DesignationID, callback, asyncState);
        }
        
        private object[] OnEndCreateCharityProfile(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.CharityProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndCreateCharityProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCharityProfileCompleted(object state) {
            if ((this.CreateCharityProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCharityProfileCompleted(this, new CreateCharityProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCharityProfileAsync(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, string RegNumber, int CatetgoryID, int DesignationID) {
            this.CreateCharityProfileAsync(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, RegNumber, CatetgoryID, DesignationID, null);
        }
        
        public void CreateCharityProfileAsync(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, string RegNumber, int CatetgoryID, int DesignationID, object userState) {
            if ((this.onBeginCreateCharityProfileDelegate == null)) {
                this.onBeginCreateCharityProfileDelegate = new BeginOperationDelegate(this.OnBeginCreateCharityProfile);
            }
            if ((this.onEndCreateCharityProfileDelegate == null)) {
                this.onEndCreateCharityProfileDelegate = new EndOperationDelegate(this.OnEndCreateCharityProfile);
            }
            if ((this.onCreateCharityProfileCompletedDelegate == null)) {
                this.onCreateCharityProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCharityProfileCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCharityProfileDelegate, new object[] {
                        UserName,
                        Password,
                        FullName,
                        City,
                        Province,
                        PostalCode,
                        Address1,
                        Address2,
                        Phone,
                        Website,
                        Email,
                        RegNumber,
                        CatetgoryID,
                        DesignationID}, this.onEndCreateCharityProfileDelegate, this.onCreateCharityProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetCharityProfileByUserID(int UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharityProfileByUserID(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.CharityProfile Connect4Help.C4H_Webservice.Service1.EndGetCharityProfileByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetCharityProfileByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetCharityProfileByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserID = ((int)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetCharityProfileByUserID(UserID, callback, asyncState);
        }
        
        private object[] OnEndGetCharityProfileByUserID(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.CharityProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetCharityProfileByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharityProfileByUserIDCompleted(object state) {
            if ((this.GetCharityProfileByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharityProfileByUserIDCompleted(this, new GetCharityProfileByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharityProfileByUserIDAsync(int UserID) {
            this.GetCharityProfileByUserIDAsync(UserID, null);
        }
        
        public void GetCharityProfileByUserIDAsync(int UserID, object userState) {
            if ((this.onBeginGetCharityProfileByUserIDDelegate == null)) {
                this.onBeginGetCharityProfileByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetCharityProfileByUserID);
            }
            if ((this.onEndGetCharityProfileByUserIDDelegate == null)) {
                this.onEndGetCharityProfileByUserIDDelegate = new EndOperationDelegate(this.OnEndGetCharityProfileByUserID);
            }
            if ((this.onGetCharityProfileByUserIDCompletedDelegate == null)) {
                this.onGetCharityProfileByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharityProfileByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharityProfileByUserIDDelegate, new object[] {
                        UserID}, this.onEndGetCharityProfileByUserIDDelegate, this.onGetCharityProfileByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetCharityProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharityProfileByUsername(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.CharityProfile Connect4Help.C4H_Webservice.Service1.EndGetCharityProfileByUsername(System.IAsyncResult result) {
            return base.Channel.EndGetCharityProfileByUsername(result);
        }
        
        private System.IAsyncResult OnBeginGetCharityProfileByUsername(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetCharityProfileByUsername(UserName, callback, asyncState);
        }
        
        private object[] OnEndGetCharityProfileByUsername(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.CharityProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetCharityProfileByUsername(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharityProfileByUsernameCompleted(object state) {
            if ((this.GetCharityProfileByUsernameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharityProfileByUsernameCompleted(this, new GetCharityProfileByUsernameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharityProfileByUsernameAsync(string UserName) {
            this.GetCharityProfileByUsernameAsync(UserName, null);
        }
        
        public void GetCharityProfileByUsernameAsync(string UserName, object userState) {
            if ((this.onBeginGetCharityProfileByUsernameDelegate == null)) {
                this.onBeginGetCharityProfileByUsernameDelegate = new BeginOperationDelegate(this.OnBeginGetCharityProfileByUsername);
            }
            if ((this.onEndGetCharityProfileByUsernameDelegate == null)) {
                this.onEndGetCharityProfileByUsernameDelegate = new EndOperationDelegate(this.OnEndGetCharityProfileByUsername);
            }
            if ((this.onGetCharityProfileByUsernameCompletedDelegate == null)) {
                this.onGetCharityProfileByUsernameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharityProfileByUsernameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharityProfileByUsernameDelegate, new object[] {
                        UserName}, this.onEndGetCharityProfileByUsernameDelegate, this.onGetCharityProfileByUsernameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginCheckUserAuthentication(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUserAuthentication(UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.DonorProfile Connect4Help.C4H_Webservice.Service1.EndCheckUserAuthentication(System.IAsyncResult result) {
            return base.Channel.EndCheckUserAuthentication(result);
        }
        
        private System.IAsyncResult OnBeginCheckUserAuthentication(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginCheckUserAuthentication(UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndCheckUserAuthentication(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.DonorProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndCheckUserAuthentication(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserAuthenticationCompleted(object state) {
            if ((this.CheckUserAuthenticationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserAuthenticationCompleted(this, new CheckUserAuthenticationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserAuthenticationAsync(string UserName, string Password) {
            this.CheckUserAuthenticationAsync(UserName, Password, null);
        }
        
        public void CheckUserAuthenticationAsync(string UserName, string Password, object userState) {
            if ((this.onBeginCheckUserAuthenticationDelegate == null)) {
                this.onBeginCheckUserAuthenticationDelegate = new BeginOperationDelegate(this.OnBeginCheckUserAuthentication);
            }
            if ((this.onEndCheckUserAuthenticationDelegate == null)) {
                this.onEndCheckUserAuthenticationDelegate = new EndOperationDelegate(this.OnEndCheckUserAuthentication);
            }
            if ((this.onCheckUserAuthenticationCompletedDelegate == null)) {
                this.onCheckUserAuthenticationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserAuthenticationCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserAuthenticationDelegate, new object[] {
                        UserName,
                        Password}, this.onEndCheckUserAuthenticationDelegate, this.onCheckUserAuthenticationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginCreateDonorProfile(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, Connect4Help.C4H_Webservice.UserGender Gender, int BirthYear, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDonorProfile(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, Gender, BirthYear, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.DonorProfile Connect4Help.C4H_Webservice.Service1.EndCreateDonorProfile(System.IAsyncResult result) {
            return base.Channel.EndCreateDonorProfile(result);
        }
        
        private System.IAsyncResult OnBeginCreateDonorProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            string FullName = ((string)(inValues[2]));
            string City = ((string)(inValues[3]));
            string Province = ((string)(inValues[4]));
            string PostalCode = ((string)(inValues[5]));
            string Address1 = ((string)(inValues[6]));
            string Address2 = ((string)(inValues[7]));
            string Phone = ((string)(inValues[8]));
            string Website = ((string)(inValues[9]));
            string Email = ((string)(inValues[10]));
            Connect4Help.C4H_Webservice.UserGender Gender = ((Connect4Help.C4H_Webservice.UserGender)(inValues[11]));
            int BirthYear = ((int)(inValues[12]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginCreateDonorProfile(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, Gender, BirthYear, callback, asyncState);
        }
        
        private object[] OnEndCreateDonorProfile(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.DonorProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndCreateDonorProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDonorProfileCompleted(object state) {
            if ((this.CreateDonorProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDonorProfileCompleted(this, new CreateDonorProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDonorProfileAsync(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, Connect4Help.C4H_Webservice.UserGender Gender, int BirthYear) {
            this.CreateDonorProfileAsync(UserName, Password, FullName, City, Province, PostalCode, Address1, Address2, Phone, Website, Email, Gender, BirthYear, null);
        }
        
        public void CreateDonorProfileAsync(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, Connect4Help.C4H_Webservice.UserGender Gender, int BirthYear, object userState) {
            if ((this.onBeginCreateDonorProfileDelegate == null)) {
                this.onBeginCreateDonorProfileDelegate = new BeginOperationDelegate(this.OnBeginCreateDonorProfile);
            }
            if ((this.onEndCreateDonorProfileDelegate == null)) {
                this.onEndCreateDonorProfileDelegate = new EndOperationDelegate(this.OnEndCreateDonorProfile);
            }
            if ((this.onCreateDonorProfileCompletedDelegate == null)) {
                this.onCreateDonorProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDonorProfileCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDonorProfileDelegate, new object[] {
                        UserName,
                        Password,
                        FullName,
                        City,
                        Province,
                        PostalCode,
                        Address1,
                        Address2,
                        Phone,
                        Website,
                        Email,
                        Gender,
                        BirthYear}, this.onEndCreateDonorProfileDelegate, this.onCreateDonorProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginGetDonorProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDonorProfileByUsername(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Connect4Help.C4H_Webservice.DonorProfile Connect4Help.C4H_Webservice.Service1.EndGetDonorProfileByUsername(System.IAsyncResult result) {
            return base.Channel.EndGetDonorProfileByUsername(result);
        }
        
        private System.IAsyncResult OnBeginGetDonorProfileByUsername(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginGetDonorProfileByUsername(UserName, callback, asyncState);
        }
        
        private object[] OnEndGetDonorProfileByUsername(System.IAsyncResult result) {
            Connect4Help.C4H_Webservice.DonorProfile retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndGetDonorProfileByUsername(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDonorProfileByUsernameCompleted(object state) {
            if ((this.GetDonorProfileByUsernameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDonorProfileByUsernameCompleted(this, new GetDonorProfileByUsernameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDonorProfileByUsernameAsync(string UserName) {
            this.GetDonorProfileByUsernameAsync(UserName, null);
        }
        
        public void GetDonorProfileByUsernameAsync(string UserName, object userState) {
            if ((this.onBeginGetDonorProfileByUsernameDelegate == null)) {
                this.onBeginGetDonorProfileByUsernameDelegate = new BeginOperationDelegate(this.OnBeginGetDonorProfileByUsername);
            }
            if ((this.onEndGetDonorProfileByUsernameDelegate == null)) {
                this.onEndGetDonorProfileByUsernameDelegate = new EndOperationDelegate(this.OnEndGetDonorProfileByUsername);
            }
            if ((this.onGetDonorProfileByUsernameCompletedDelegate == null)) {
                this.onGetDonorProfileByUsernameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDonorProfileByUsernameCompleted);
            }
            base.InvokeAsync(this.onBeginGetDonorProfileByUsernameDelegate, new object[] {
                        UserName}, this.onEndGetDonorProfileByUsernameDelegate, this.onGetDonorProfileByUsernameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginSearchCharitiesByQueryPageByPage(string Query, string Province, bool LooseSearch, int PageNumber, int RowsPerPageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchCharitiesByQueryPageByPage(Query, Province, LooseSearch, PageNumber, RowsPerPageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> Connect4Help.C4H_Webservice.Service1.EndSearchCharitiesByQueryPageByPage(out int TotalRows, out System.Collections.Generic.Dictionary<string, int> Statistics, out System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int> DesignationStatistics, System.IAsyncResult result) {
            return base.Channel.EndSearchCharitiesByQueryPageByPage(out TotalRows, out Statistics, out DesignationStatistics, result);
        }
        
        private System.IAsyncResult OnBeginSearchCharitiesByQueryPageByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Query = ((string)(inValues[0]));
            string Province = ((string)(inValues[1]));
            bool LooseSearch = ((bool)(inValues[2]));
            int PageNumber = ((int)(inValues[3]));
            int RowsPerPageCount = ((int)(inValues[4]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginSearchCharitiesByQueryPageByPage(Query, Province, LooseSearch, PageNumber, RowsPerPageCount, callback, asyncState);
        }
        
        private object[] OnEndSearchCharitiesByQueryPageByPage(System.IAsyncResult result) {
            int TotalRows = this.GetDefaultValueForInitialization<int>();
            System.Collections.Generic.Dictionary<string, int> Statistics = this.GetDefaultValueForInitialization<System.Collections.Generic.Dictionary<string, int>>();
            System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int> DesignationStatistics = this.GetDefaultValueForInitialization<System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int>>();
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndSearchCharitiesByQueryPageByPage(out TotalRows, out Statistics, out DesignationStatistics, result);
            return new object[] {
                    TotalRows,
                    Statistics,
                    DesignationStatistics,
                    retVal};
        }
        
        private void OnSearchCharitiesByQueryPageByPageCompleted(object state) {
            if ((this.SearchCharitiesByQueryPageByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCharitiesByQueryPageByPageCompleted(this, new SearchCharitiesByQueryPageByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchCharitiesByQueryPageByPageAsync(string Query, string Province, bool LooseSearch, int PageNumber, int RowsPerPageCount) {
            this.SearchCharitiesByQueryPageByPageAsync(Query, Province, LooseSearch, PageNumber, RowsPerPageCount, null);
        }
        
        public void SearchCharitiesByQueryPageByPageAsync(string Query, string Province, bool LooseSearch, int PageNumber, int RowsPerPageCount, object userState) {
            if ((this.onBeginSearchCharitiesByQueryPageByPageDelegate == null)) {
                this.onBeginSearchCharitiesByQueryPageByPageDelegate = new BeginOperationDelegate(this.OnBeginSearchCharitiesByQueryPageByPage);
            }
            if ((this.onEndSearchCharitiesByQueryPageByPageDelegate == null)) {
                this.onEndSearchCharitiesByQueryPageByPageDelegate = new EndOperationDelegate(this.OnEndSearchCharitiesByQueryPageByPage);
            }
            if ((this.onSearchCharitiesByQueryPageByPageCompletedDelegate == null)) {
                this.onSearchCharitiesByQueryPageByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCharitiesByQueryPageByPageCompleted);
            }
            base.InvokeAsync(this.onBeginSearchCharitiesByQueryPageByPageDelegate, new object[] {
                        Query,
                        Province,
                        LooseSearch,
                        PageNumber,
                        RowsPerPageCount}, this.onEndSearchCharitiesByQueryPageByPageDelegate, this.onSearchCharitiesByQueryPageByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Connect4Help.C4H_Webservice.Service1.BeginSearchCharitiesByQuery(string Query, string Province, bool LooseSearch, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchCharitiesByQuery(Query, Province, LooseSearch, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> Connect4Help.C4H_Webservice.Service1.EndSearchCharitiesByQuery(System.IAsyncResult result) {
            return base.Channel.EndSearchCharitiesByQuery(result);
        }
        
        private System.IAsyncResult OnBeginSearchCharitiesByQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Query = ((string)(inValues[0]));
            string Province = ((string)(inValues[1]));
            bool LooseSearch = ((bool)(inValues[2]));
            return ((Connect4Help.C4H_Webservice.Service1)(this)).BeginSearchCharitiesByQuery(Query, Province, LooseSearch, callback, asyncState);
        }
        
        private object[] OnEndSearchCharitiesByQuery(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> retVal = ((Connect4Help.C4H_Webservice.Service1)(this)).EndSearchCharitiesByQuery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchCharitiesByQueryCompleted(object state) {
            if ((this.SearchCharitiesByQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCharitiesByQueryCompleted(this, new SearchCharitiesByQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchCharitiesByQueryAsync(string Query, string Province, bool LooseSearch) {
            this.SearchCharitiesByQueryAsync(Query, Province, LooseSearch, null);
        }
        
        public void SearchCharitiesByQueryAsync(string Query, string Province, bool LooseSearch, object userState) {
            if ((this.onBeginSearchCharitiesByQueryDelegate == null)) {
                this.onBeginSearchCharitiesByQueryDelegate = new BeginOperationDelegate(this.OnBeginSearchCharitiesByQuery);
            }
            if ((this.onEndSearchCharitiesByQueryDelegate == null)) {
                this.onEndSearchCharitiesByQueryDelegate = new EndOperationDelegate(this.OnEndSearchCharitiesByQuery);
            }
            if ((this.onSearchCharitiesByQueryCompletedDelegate == null)) {
                this.onSearchCharitiesByQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCharitiesByQueryCompleted);
            }
            base.InvokeAsync(this.onBeginSearchCharitiesByQueryDelegate, new object[] {
                        Query,
                        Province,
                        LooseSearch}, this.onEndSearchCharitiesByQueryDelegate, this.onSearchCharitiesByQueryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Connect4Help.C4H_Webservice.Service1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<Connect4Help.C4H_Webservice.Service1>, Connect4Help.C4H_Webservice.Service1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<Connect4Help.C4H_Webservice.Service1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetServiceTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetServiceTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> EndGetServiceTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.ServiceType>)(base.EndInvoke("GetServiceTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServices(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetServices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetServices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(base.EndInvoke("GetServices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServicesForSpecificType(int ServiceTypeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ServiceTypeID;
                System.IAsyncResult _result = base.BeginInvoke("GetServicesForSpecificType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetServicesForSpecificType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(base.EndInvoke("GetServicesForSpecificType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserWatchlist(int UserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserWatchlist", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> EndGetUserWatchlist(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.User>)(base.EndInvoke("GetUserWatchlist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddToUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserID;
                _args[1] = FollowedUserID;
                System.IAsyncResult _result = base.BeginInvoke("AddToUserWatchList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddToUserWatchList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddToUserWatchList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveFromUserWatchList(int UserID, int FollowedUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserID;
                _args[1] = FollowedUserID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveFromUserWatchList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveFromUserWatchList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveFromUserWatchList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserServices(int UserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserServices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> EndGetUserServices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.Service>)(base.EndInvoke("GetUserServices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddToUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserID;
                _args[1] = ServiceID;
                System.IAsyncResult _result = base.BeginInvoke("AddToUserServicesList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddToUserServicesList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddToUserServicesList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveromUserServicesList(int UserID, int ServiceID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserID;
                _args[1] = ServiceID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveromUserServicesList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveromUserServicesList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveromUserServicesList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCharityDesignations(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCharityDesignations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> EndGetCharityDesignations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityDesignation>)(base.EndInvoke("GetCharityDesignations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCharityCategories(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCharityCategories", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> EndGetCharityCategories(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityCategory>)(base.EndInvoke("GetCharityCategories", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateCharityProfile(
                        string UserName, 
                        string Password, 
                        string FullName, 
                        string City, 
                        string Province, 
                        string PostalCode, 
                        string Address1, 
                        string Address2, 
                        string Phone, 
                        string Website, 
                        string Email, 
                        string RegNumber, 
                        int CatetgoryID, 
                        int DesignationID, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[14];
                _args[0] = UserName;
                _args[1] = Password;
                _args[2] = FullName;
                _args[3] = City;
                _args[4] = Province;
                _args[5] = PostalCode;
                _args[6] = Address1;
                _args[7] = Address2;
                _args[8] = Phone;
                _args[9] = Website;
                _args[10] = Email;
                _args[11] = RegNumber;
                _args[12] = CatetgoryID;
                _args[13] = DesignationID;
                System.IAsyncResult _result = base.BeginInvoke("CreateCharityProfile", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.CharityProfile EndCreateCharityProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.CharityProfile _result = ((Connect4Help.C4H_Webservice.CharityProfile)(base.EndInvoke("CreateCharityProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCharityProfileByUserID(int UserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserID;
                System.IAsyncResult _result = base.BeginInvoke("GetCharityProfileByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.CharityProfile EndGetCharityProfileByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.CharityProfile _result = ((Connect4Help.C4H_Webservice.CharityProfile)(base.EndInvoke("GetCharityProfileByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCharityProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("GetCharityProfileByUsername", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.CharityProfile EndGetCharityProfileByUsername(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.CharityProfile _result = ((Connect4Help.C4H_Webservice.CharityProfile)(base.EndInvoke("GetCharityProfileByUsername", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckUserAuthentication(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserName;
                _args[1] = Password;
                System.IAsyncResult _result = base.BeginInvoke("CheckUserAuthentication", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.DonorProfile EndCheckUserAuthentication(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.DonorProfile _result = ((Connect4Help.C4H_Webservice.DonorProfile)(base.EndInvoke("CheckUserAuthentication", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateDonorProfile(string UserName, string Password, string FullName, string City, string Province, string PostalCode, string Address1, string Address2, string Phone, string Website, string Email, Connect4Help.C4H_Webservice.UserGender Gender, int BirthYear, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = UserName;
                _args[1] = Password;
                _args[2] = FullName;
                _args[3] = City;
                _args[4] = Province;
                _args[5] = PostalCode;
                _args[6] = Address1;
                _args[7] = Address2;
                _args[8] = Phone;
                _args[9] = Website;
                _args[10] = Email;
                _args[11] = Gender;
                _args[12] = BirthYear;
                System.IAsyncResult _result = base.BeginInvoke("CreateDonorProfile", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.DonorProfile EndCreateDonorProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.DonorProfile _result = ((Connect4Help.C4H_Webservice.DonorProfile)(base.EndInvoke("CreateDonorProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDonorProfileByUsername(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("GetDonorProfileByUsername", _args, callback, asyncState);
                return _result;
            }
            
            public Connect4Help.C4H_Webservice.DonorProfile EndGetDonorProfileByUsername(System.IAsyncResult result) {
                object[] _args = new object[0];
                Connect4Help.C4H_Webservice.DonorProfile _result = ((Connect4Help.C4H_Webservice.DonorProfile)(base.EndInvoke("GetDonorProfileByUsername", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchCharitiesByQueryPageByPage(string Query, string Province, bool LooseSearch, int PageNumber, int RowsPerPageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = Query;
                _args[1] = Province;
                _args[2] = LooseSearch;
                _args[3] = PageNumber;
                _args[4] = RowsPerPageCount;
                System.IAsyncResult _result = base.BeginInvoke("SearchCharitiesByQueryPageByPage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> EndSearchCharitiesByQueryPageByPage(out int TotalRows, out System.Collections.Generic.Dictionary<string, int> Statistics, out System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int> DesignationStatistics, System.IAsyncResult result) {
                object[] _args = new object[3];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile>)(base.EndInvoke("SearchCharitiesByQueryPageByPage", _args, result)));
                TotalRows = ((int)(_args[0]));
                Statistics = ((System.Collections.Generic.Dictionary<string, int>)(_args[1]));
                DesignationStatistics = ((System.Collections.Generic.Dictionary<Connect4Help.C4H_Webservice.CharityDesignation, int>)(_args[2]));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchCharitiesByQuery(string Query, string Province, bool LooseSearch, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Query;
                _args[1] = Province;
                _args[2] = LooseSearch;
                System.IAsyncResult _result = base.BeginInvoke("SearchCharitiesByQuery", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> EndSearchCharitiesByQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile> _result = ((System.Collections.ObjectModel.ObservableCollection<Connect4Help.C4H_Webservice.CharityProfile>)(base.EndInvoke("SearchCharitiesByQuery", _args, result)));
                return _result;
            }
        }
    }
}
